<snippet>
  <content><![CDATA[
// Function helper to strip a single character from a string; by default, simply removes the character.
// @param {String} \$string - The string to alter.
// @param {String} \$to-replace - The character to check for.
// @param {String} \$replacement [''] - The character to replace the removed character with.
// Usage {
//   .foo:after {
//     content: str-replace('Hello.', '.', '!');
//   }
// Result
//   .foo:after {
//     content: 'Hello!'
//   }
@function str-replace(\$string, \$to-replace, \$replacement:'') {
  \$target-location: str-index(\$string, \$to-replace);
  @if \$target-location == null { @return \$string; }
  \$string-without-target: str-slice(\$string, 1, \$target-location - 1) + str-slice(\$string, \$target-location + 1);
  \$string: str-insert(\$string-without-target, \$replacement, \$target-location);
  @return \$string;
}

.foo:after {
  content: str-replace('${1:Hello.}', '${2:toreplace-e}', '${3:replacewith-!}');
}
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>andy-str-replace</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>source.scss</scope>
</snippet>
