<snippet>
  <content><![CDATA[
// Function helper to strip a single character from a string; by default, simply removes the character.
// @param {String} ${1:}string - The string to alter.
// @param {String} ${1:}to-replace - The character to check for.
// @param {String} ${1:}replacement [''] - The character to replace the removed character with.
// Usage {
//   .foo:after {
//     content: str-replace('Hello.', '.', '!');
//   }
// Result
//   .foo:after {
//     content: 'Hello!'
//   }
@function str-replace(${1:}string, ${1:}to-replace, ${1:}replacement:'') {
  ${1:}target-location: str-index(${1:}string, ${1:}to-replace);
  @if ${1:}target-location == null { @return ${1:}string; }
  ${1:}string-without-target: str-slice(${1:}string, 1, ${1:}target-location - 1) + str-slice(${1:}string, ${1:}target-location + 1);
  ${1:}string: str-insert(${1:}string-without-target, ${1:}replacement, ${1:}target-location);
  @return ${1:}string;
}

.foo:after {
  content: str-replace('Hello.', '.', '!');
}
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>andy-str-replace</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>source.scss</scope>
</snippet>
